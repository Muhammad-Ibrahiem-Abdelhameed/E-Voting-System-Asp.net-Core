@model IEnumerable<EVotingSystem.Models.Candidate>

@{
    ViewData["Title"] = "Dashboard";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}

<!-- Begin Page Content -->

<div class="row">
    <div class="col-md-12">
        <div class="overview-wrap">
            <h2 class="title-1">overview</h2>
        </div>
    </div>
</div>

<!-- Content Row -->
<div class="row m-t-25">
    <div class="col-sm-6 col-lg-3">
        <div class="overview-item overview-item--c2">
            <div class="overview__inner">
                <div class="overview-box clearfix">
                    <div class="icon votingicon-wrapper">
                        <img src="~/images/voting/election.svg" alt="votes" />
                    </div>
                    <div class="text">
                        <h2>@ViewBag.VotesCount</h2>
                        <span>VOTES</span>
                    </div>
                </div>

            </div>
        </div>
    </div>
    <div class="col-sm-6 col-lg-3">
        <div class="overview-item overview-item--c3">
            <div class="overview__inner">
                <div class="overview-box clearfix">
                    <div class="icon votingicon-wrapper">
                        <img src="~/images/voting/team.svg" alt="users" />
                    </div>
                    <div class="text">
                        <h2>@ViewBag.UsersCount</h2>
                        <span>USERS</span>
                    </div>
                </div>

            </div>
        </div>
    </div>
    <div class="col-sm-6 col-lg-3">
        <div class="overview-item overview-item--c4">
            <div class="overview__inner">
                <div class="overview-box clearfix">
                    <div class="icon votingicon-wrapper">
                        <img src="~/images/voting/ballot.svg" alt="users" />
                    </div>
                    <div class="text">
                        <h2>@ViewBag.VotersCount</h2>
                        <span>VOTERS</span>
                    </div>
                </div>

            </div>
        </div>
    </div>
    <div class="col-sm-6 col-lg-3">
        <div class="overview-item overview-item--c1">
            <div class="overview__inner">
                <div class="overview-box clearfix">
                    <div class="icon votingicon-wrapper">
                        <img src="~/images/voting/capitol.svg" alt="states" />
                    </div>
                    <div class="text">
                        <h2>@ViewBag.StatesCount</h2>
                        <span>STATES</span>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>

<div class="card">
    <div class="card-header">
        <strong>Select vote </strong>
        <small>
            select specific vote to show its results and graphs
        </small>
    </div>
    <div class="card-body">
        <form class="row" asp-controller="Dashboard" asp-action="Overview"
              data-ajax="true"
              data-ajax-method="POST"
              data-ajax-mode="replace"
              data-ajax-update="#overview"
              data-ajax-loading="#divloading"
              data-ajax-success="success"
              data-ajax-failure="failure"
              data-ajax-complete="complete">

            <div class="col-lg-4">
                <div class="form-group">
                    <select name="VoteId" id="VoteId" class="form-control" asp-items="ViewBag.Votes"></select>

                </div>
            </div>
            <div class="col-lg-8">
                <button class="btn btn-primary" type="submit">Select vote</button>
            </div>
        </form>
    </div>
</div>

<div id="overview">

</div>

<div id="divloading" style="margin: 0px; padding: 0px; position: fixed; right: 0px;
        top: 0px; width: 100%; height: 100%; background-color:#ffffff; z-index: 300001;
        opacity: .8; filter: alpha(opacity=80);display:none">
    <div style="position: absolute; top: 40%; left: 40%; color: black;">
        <img src="~/images/Wedges.gif" />
    </div>
</div>

@section Scripts{
    
    <script src="~/lib/apexcharts/.eslintrc.js"></script>
    <script src="~/lib/apexcharts/dist/apexcharts.js"></script>
    <script>
        
        function success() {

            var labels = $('#pieChartContent1').html()
            labels = labels.replace(/'/g, '"')
            labels = JSON.parse(labels)

            var series = $('#pieChartContent2').html()
            series = series.replace(/'/g, '"')
            series = JSON.parse(series)

            var totalVoters = 0
            series.forEach(item => {
                totalVoters += item
            })

            var options = {
                chart: {
                    type: 'pie'
                },
                series: series,
                labels: labels,
                responsive: [{
                    breakpoint: 480,
                    options: {
                        chart: {
                            width: 200
                        },
                        legend: {
                            position: 'bottom'
                        }
                    }
                }]
            }
            var chart1 = new ApexCharts(document.querySelector("#pieChart"), options);
            chart1.render();

            // attendance
            var optionsDonut = {
                chart: {
                    type: 'donut'
                },
                series: [parseInt($('#cirChartContent1').html()),
                         parseInt($('#cirChartContent2').html())],
                labels: ['Voted', 'Not Voted']
            }
            var chart2 = new ApexCharts(document.querySelector("#cirChart"), optionsDonut);
            chart2.render();

            var data = $('#barChartContent1').html()
            data = data.replace(/'/g, '"')
            data = JSON.parse(data)
            console.log(data)

            var categories = $('#barChartContent2').html()
            categories = categories.replace(/'/g, '"')
            categories = JSON.parse(categories)
            console.log(categories)
            // states
            var options = {
                chart: {
                    height: 350,
                    type: 'bar',
                },
                plotOptions: {
                    bar: {
                        dataLabels: {
                            position: 'top', // top, center, bottom
                        },
                    }
                },
                dataLabels: {
                    enabled: true,
                    formatter: function (val) {
                        return val ;
                    },
                    offsetY: -20,
                    style: {
                        fontSize: '12px',
                        colors: ["#d35e11"]
                    }
                },
                series: [{
                    name: 'Top States',
                    data: categories
                }],
                xaxis: {
                    categories: data,
                    position: 'top',
                    labels: {
                        offsetY: -18,

                    },
                    axisBorder: {
                        show: false
                    },
                    axisTicks: {
                        show: false
                    },
                    crosshairs: {
                        fill: {
                            type: 'gradient',
                            gradient: {
                                colorFrom: '#D8E3F0',
                                colorTo: '#BED1E6',
                                stops: [0, 100],
                                opacityFrom: 0.4,
                                opacityTo: 0.5,
                            }
                        }
                    },
                    tooltip: {
                        enabled: true,
                        offsetY: -35,

                    }
                },
                fill: {
                    gradient: {
                        shade: 'light',
                        type: "horizontal",
                        shadeIntensity: 0.25,
                        gradientToColors: undefined,
                        inverseColors: true,
                        opacityFrom: 1,
                        opacityTo: 1,
                        stops: [50, 0, 100, 100]
                    },
                },
                yaxis: {
                    axisBorder: {
                        show: false
                    },
                    axisTicks: {
                        show: false,
                    },
                    labels: {
                        show: false,
                        formatter: function (val) {
                            return val;
                        }
                    }

                },
                title: {
                    text: 'Top States',
                    floating: true,
                    offsetY: 320,
                    align: 'center',
                    style: {
                        color: '#d35e11'
                    }
                },
            }

            var chart3 = new ApexCharts(document.querySelector("#barChart"), options );
            chart3.render();
            
        }
        function failure() {
            
        }      
        
    </script>
}

